# vim: set ft=zsh
if [[ "$PROFILE_ZSH_STARTUP" == true ]]; then
  zmodload zsh/zprof
fi

export DOT_BASE_DIR="$HOME/.dotfiles"
export ZPLUG_HOME="$HOME/.dotfiles/third-party/zplug"
source "$ZPLUG_HOME/init.zsh"

fpath=(~/.zsh/funcs "${fpath[@]}")

ZSH=$HOME/.zsh
export PATH="$HOME/.npm/bin:/opt/homebrew/opt/openjdk/bin:$PATH:$HOME/.local/bin"

HISTSIZE=10000
SAVEHIST=10000

HISTFILE="$HOME/.zsh_history"
mkdir -p "$(dirname "$HISTFILE")"

bindkey '^ ' autosuggest-accept
unsetopt beep
bindkey -e

autoload -Uz select-word-style
select-word-style bash

source ~/.zsh/prompt.zsh

autoload -U edit-command-line
zle -N edit-command-line
bindkey '\C-x\C-e' edit-command-line

export FZF_DEFAULT_COMMAND='fd --type f --strip-cwd-prefix --hidden --follow --exclude .git'
# export FZF_DEFAULT_COMMAND='ag --hidden --ignore .git --ignore "*.png" --ignore "*.jpg" --ignore "*.mp3" --ignore "*.import" --ignore "*.wav" --ignore "*.ogg" --ignore "*.aseprite" --ignore "*.ttf" --ignore "*.gif" --ignore "*.TTF" --ignore "*.afdesign" --ignore steam --ignore "*.afphoto" --ignore "*.tres" -l -g ""'
# export FZF_DEFAULT_COMMAND='
#   (git ls-tree -r --name-only HEAD ||
#    find . -path "*/\.*" -prune -o -type f -print -o -type l -print |
#       sed s/^..//) 2> /dev/null'


if [ -z "$VIM_VERSION" ]; then
  VIM_VERSION="nvim"
fi

export EDITOR="$VIM_VERSION"
export VISUAL="$VIM_VERSION"

alias vim="$VIM_VERSION"
alias vi="vim"

stty sane


# Load all libs under
for config_file in "$ZSH"/lib/*.zsh; do
  source "$config_file"
done

# completion settings
fpath=(~/.zsh/completion "${fpath[@]}")

autoload -Uz compinit
compinit -C

# zplug "zsh-users/zsh-autosuggestions"

# color theme
source "$ZSH/prompt.zsh"

if [ -f /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then
  source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
fi

if [ -f /usr/share/doc/git-extras/git-extras-completion.zsh ]; then
  source /usr/share/doc/git-extras/git-extras-completion.zsh
fi

if [ -f /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then
  source /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh
fi

export XDG_CONFIG_HOME="$HOME/.config"
export LC_ALL=en_US.UTF-8

autoload -Uz $(print ~/.dotfiles/zsh/funcs/*(:t))

LOCAL_PATHS="/usr/local/bin:/usr/local/sbin"

export PATH="$HOME/.todo/bin:$HOME/.emacs.d/bin:$HOME/.dotfiles/bin:$LOCAL_PATHS:$PATH"
export PATH="$HOME/.nimble/bin:$PATH"
export PATH="$HOME/projects/odin:$PATH"

# Base16 Shell
# BASE16_SHELL="$HOME/.config/base16-shell/"
# if [ -n "$PS1" ] && [ -s "$BASE16_SHELL/profile_helper.sh" ]; then
#   eval "$("$BASE16_SHELL/profile_helper.sh")"
# fi
# base16_default-dark

if [ ! -S ~/.ssh/ssh_auth_sock ]; then
  eval `ssh-agent`
  ln -sf "$SSH_AUTH_SOCK" ~/.ssh/ssh_auth_sock
fi

export SSH_AUTH_SOCK=~/.ssh/ssh_auth_sock
ssh-add -l > /dev/null || ssh-add

export PATH="$HOME/.cargo/bin:$PATH"

if type rustc &>/dev/null; then
  export RUST_SRC_PATH=$(rustc --print sysroot)/lib/rustlib/src/rust/library/
fi

export QT_STYLE_OVERRIDE=adwaita-dark

export LOCALE_ARCHIVE=/usr/lib/locale/locale-archive

# NHM="$HOME/.nix-profile/etc/profile.d/hm-session-vars.sh"
# export NIX_PATH=$HOME/.nix-defexpr/channels:/nix/var/nix/profiles/per-user/root/channels${NIX_PATH:+:$NIX_PATH}
# export NIX_PATH="${NIX_PATH:+$NIX_PATH:}$HOME/.nix-defexpr/channels"
# export NIX_PATH=$HOME/.nix-defexpr/channels:/nix/var/nix/profiles/per-user/darth/channels${NIX_PATH:+:$NIX_PATH}
# source $HOME/.nix-profile/etc/profile.d/hm-session-vars.sh

export CARGO_NET_GIT_FETCH_WITH_CLI=true

if [[ `uname` == "Darwin" ]]; then
  export TERM=xterm-256color

  [ -f /opt/homebrew/bin/brew ] && eval "$(/opt/homebrew/bin/brew shellenv)"
fi

# >>> mamba initialize >>>
# !! Contents within this block are managed by 'mamba init' !!
export MAMBA_EXE="/home/darth/.local/bin/micromamba";
export MAMBA_ROOT_PREFIX="/home/darth/micromamba";
__mamba_setup="$("$MAMBA_EXE" shell hook --shell zsh --prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__mamba_setup"
else
    if [ -f "/home/darth/micromamba/etc/profile.d/micromamba.sh" ]; then
        . "/home/darth/micromamba/etc/profile.d/micromamba.sh"
    else
        export  PATH="/home/darth/micromamba/bin:$PATH"  # extra space after export prevents interference from conda init
    fi
fi
unset __mamba_setup
# <<< mamba initialize <<<
