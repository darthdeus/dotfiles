fpath=(~/.zsh/funcs "${fpath[@]}")

ZSH=$HOME/.zsh

# Load all libs under
for config_file in "$ZSH"/lib/*.zsh; do
  source "$config_file"
done

# completion settings
fpath=(~/.zsh/completion "${fpath[@]}")

autoload -Uz compinit
compinit -C

# color theme
source "$ZSH/prompt.zsh"

export XDG_CONFIG_HOME="$HOME/.config"
export LC_ALL=en_US.UTF-8

autoload -Uz $(print ~/.dotfiles/zsh/funcs/*(:t))

LOCAL_PATHS="/usr/local/bin:/usr/local/sbin"

export PATH="$HOME/.todo/bin:$HOME/.emacs.d/bin:$HOME/.dotfiles/bin:$LOCAL_PATHS:$PATH"

# Base16 Shell
BASE16_SHELL="$HOME/.config/base16-shell/"
if [ -n "$PS1" ] && [ -s "$BASE16_SHELL/profile_helper.sh" ]; then
  eval "$("$BASE16_SHELL/profile_helper.sh")"
fi
base16_default-dark

if [ ! -S ~/.ssh/ssh_auth_sock ]; then
  eval `ssh-agent`
  ln -sf "$SSH_AUTH_SOCK" ~/.ssh/ssh_auth_sock
fi

export SSH_AUTH_SOCK=~/.ssh/ssh_auth_sock
ssh-add -l > /dev/null || ssh-add

[ -f /opt/homebrew/bin/brew ] && eval "$(/opt/homebrew/bin/brew shellenv)"

# export PATH="$HOME/.cargo/bin:$HOME/projects/homebrew/bin:$HOME/projects/homebrew/sbin:$PATH"
export PATH="$HOME/.cargo/bin:$PATH"
if type rustc &>/dev/null; then
  export RUST_SRC_PATH=$(rustc --print sysroot)/lib/rustlib/src/rust/library/
fi

export QT_STYLE_OVERRIDE=adwaita-dark

export LOCALE_ARCHIVE=/usr/lib/locale/locale-archive

NHM="$HOME/.nix-profile/etc/profile.d/hm-session-vars.sh"
# export NIX_PATH=$HOME/.nix-defexpr/channels:/nix/var/nix/profiles/per-user/root/channels${NIX_PATH:+:$NIX_PATH}
# export NIX_PATH="${NIX_PATH:+$NIX_PATH:}$HOME/.nix-defexpr/channels"

export NIX_PATH=$HOME/.nix-defexpr/channels:/nix/var/nix/profiles/per-user/darth/channels${NIX_PATH:+:$NIX_PATH}
source $HOME/.nix-profile/etc/profile.d/hm-session-vars.sh
